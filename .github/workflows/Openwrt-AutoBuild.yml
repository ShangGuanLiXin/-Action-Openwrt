name: Openwrt-AutoBuild

on:
  #  release:
  #    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - 'start'
#  schedule:
#    - cron: 0 20 */7 * *
  watch:
    types: [started]

env:
  RUN_VALIDATION: true

jobs:
  build:
    runs-on:  ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    name: Build ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [lean-x64] #lean-x64,lean-ipq40xx,lean-mt7621,lean-rockchip,lienol-x64

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Date
        run: |
          date=$(date +%Y-%m-%d)
          echo "DATE=$date" >> $GITHUB_ENV

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean

      - name: Load Settings.ini
        run: |
          source "${GITHUB_WORKSPACE}/user/${{matrix.target}}/settings.ini"
          echo "REPO_URL=${REPO_URL}" >> $GITHUB_ENV
          echo "REPO_BRANCH=${REPO_BRANCH}" >> $GITHUB_ENV
          echo "UPLOAD_PACKAGES_DIR=${UPLOAD_PACKAGES_DIR}" >> $GITHUB_ENV
          echo "UPLOAD_TARGETS_DIR=${UPLOAD_TARGETS_DIR}" >> $GITHUB_ENV
          echo "UPLOAD_FIRMWARE=${UPLOAD_FIRMWARE}" >> $GITHUB_ENV
          echo "UPLOAD_TO_ARTIFACTS=${UPLOAD_TO_ARTIFACTS}" >> $GITHUB_ENV
          echo "UPLOAD_TO_REALEASE=${UPLOAD_TO_REALEASE}" >> $GITHUB_ENV
          echo "UPLOAD_TO_COWTRANSFER=${UPLOAD_TO_COWTRANSFER}" >> $GITHUB_ENV
          echo "WECHAT_NOTIFICATION=${WECHAT_NOTIFICATION}" >> $GITHUB_ENV

      - name: Clone source code
        run: |
          git clone ${{ env.REPO_URL }} -b ${{ env.REPO_BRANCH }} openwrt

      - name: Update feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt && ./scripts/feeds install -a

      - name: Download package
        id: package
        run: |
          cd openwrt
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
      - name: Compile the firmware
        id: compile
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 V=s
          find ./bin  ! -name '*ac2100*' -name *initramfs*  -exec rm -f {} \;
          echo "::set-output name=status::success"

      - name:  Pack packages_dir
        if: steps.compile.outputs.status == 'success'
        run: |
          cd openwrt/bin/packages/
          tar -cvf  ${{matrix.target}}_packages.tar ./
          gzip ${{matrix.target}}_packages.tar
          mv *.tar.gz ..

      - name:  Pack targets_dir
        if: steps.compile.outputs.status == 'success'
        run: |
          cd openwrt/bin/targets/
          tar -cvf  ${{matrix.target}}_targets.tar ./
          gzip ${{matrix.target}}_targets.tar
          mv *.tar.gz ..

      - name: Assemble Firmware
        run: |
          rm -rf ./Firmware/
          mkdir -p ./Firmware/
          find openwrt/bin/targets/ -name "*bin*" | xargs -i cp {} ./Firmware/
          find openwrt/bin/targets/ -name "*img*" | xargs -i cp -f {} ./Firmware/

      - name: Upload Packages to CowTransfer
        if: env.UPLOAD_PACKAGES_DIR == 'true' && env.UPLOAD_TO_COWTRANSFER == 'true' && !cancelled() && steps.compile.outputs.status == 'success'
        run: |
          curl -fsSL git.io/file-transfer | sh
           ./transfer cow --block 2621440 -s -p 64 --no-progress openwrt/bin/${{matrix.target}}_packages.tar.gz

      - name: Upload Targetss to CowTransfer
        if: env.UPLOAD_TARGETS_DIR == 'true' && env.UPLOAD_TO_COWTRANSFER == 'true' && !cancelled() && steps.compile.outputs.status == 'success'
        run: |
          curl -fsSL git.io/file-transfer | sh
           ./transfer cow --block 2621440 -s -p 64 --no-progress openwrt/bin/${{matrix.target}}_targets.tar.gz

      - name: WeChat notification
        if: env.WECHAT_NOTIFICATION == 'true' && !cancelled() && steps.compile.outputs.status == 'success'
        run: curl https://sc.ftqq.com/${{ secrets.SCKEY }}.send?text=${{matrix.target}}编译完成